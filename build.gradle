plugins {
	// Dependencies
	id 'fabric-loom' version '0.6-SNAPSHOT'
	// Mod Hosting Publish
	id "com.matthewprenger.cursegradle" version "1.4.0"
	id "com.modrinth.minotaur" version "1.1.0"
	// Maven Publish
	id 'maven'
	id 'signing'
	id 'io.codearte.nexus-staging' version '0.22.0'
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

dependencies {
	//to change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	modImplementation "com.terraformersmc:modmenu:${project.modmenu_version}"
	modApi("me.shedaniel.cloth:cloth-config-fabric:${project.clothconfig_version}") {
		exclude(group: "net.fabricmc.fabric-api")
	}
	modImplementation "dev.the-fireplace:Fireplace-Lib:${project.fireplacelib_version}"

	compile "com.google.code.findbugs:jsr305:3.0.2"
}

repositories {
	maven {
		name = 'Cloth Config'
		url = 'https://maven.shedaniel.me/'
	}
	maven {
		name = 'Mod Menu'
		url = 'https://maven.terraformersmc.com/releases/'
	}
}

processResources {
	inputs.property "version", project.version

	from(sourceSets.main.resources.srcDirs) {
		include "fabric.mod.json"
		expand "version": project.version
	}

	from(sourceSets.main.resources.srcDirs) {
		exclude "fabric.mod.json"
	}
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile) {
	options.encoding = "UTF-8"
}

// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
// if it is present.
// If you remove this task, sources will not be generated.
task sourcesJar(type: Jar, dependsOn: classes) {
	archiveClassifier.set("sources")
	from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: classes) {
	archiveClassifier.set('javadoc')
	from javadoc
}

artifacts {
	archives jar, javadocJar, sourcesJar
}

signing {
	sign configurations.archives
}

signArchives.dependsOn(remapSourcesJar)

jar {
	from 'LICENSE'
}

if (hasProperty('curseForgeApiKey')) {
	curseforge {
		apiKey = curseForgeApiKey
		project {
			id = '274863'
			changelog = file('changelog.txt')
			releaseType = project.release_type
			addGameVersion project.minecraft_version
			addGameVersion '1.16.4'
			addGameVersion '1.16.3'
			addGameVersion '1.16.2'
			addGameVersion 'Java 8'
			addGameVersion 'Fabric'
			mainArtifact(new File(new File(buildDir, "libs"), "$archivesBaseName-${version}.jar")) {
				displayName = "$archivesBaseName-$version"
				relations {
					requiredDependency 'fireplace-lib'
					optionalDependency 'cloth-config'
					optionalDependency 'modmenu'
				}
			}
		}
		options {
			javaIntegration = false
			forgeGradleIntegration = false
		}
	}
}

import com.modrinth.minotaur.TaskModrinthUpload
if (hasProperty('modrinthApiKey')) {
	task publishModrinth(type: TaskModrinthUpload) {
		token = modrinthApiKey
		projectId = '00000000'
		versionNumber = version
		versionName = project.mod_version
		uploadFile = new File(new File(buildDir, "libs"), "$archivesBaseName-${version}.jar")
		changelog = file('changelog.txt').getText()
		releaseType = project.release_type
		addGameVersion(project.minecraft_version as String)
		addGameVersion('1.16.4')
		addGameVersion('1.16.3')
		addGameVersion('1.16.2')
		addLoader('fabric')
	}
}

uploadArchives {
	repositories {
		mavenDeployer {
			beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

			repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
				authentication(userName: ossrhUsername, password: ossrhPassword)
			}

			snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
				authentication(userName: ossrhUsername, password: ossrhPassword)
			}

			pom.project {
				name 'Unforgiving Void'
				packaging 'jar'
				description 'A server-side Minecraft mod that makes the player end up in the Nether after falling into the Void.'
				url 'https://www.curseforge.com/minecraft/mc-mods/unforgiving-void'

				scm {
					connection "scm:svn:https://github.com/The-Fireplace-Minecraft-Mods/${project.github_slug}.git"
					developerConnection "scm:svn:https://github.com/The-Fireplace-Minecraft-Mods/${project.github_slug}.git"
					url "https://github.com/The-Fireplace-Minecraft-Mods/${project.github_slug}"
				}

				licenses {
					license {
						name 'Mozilla Public License 2.0'
						url 'https://www.mozilla.org/en-US/MPL/2.0/'
					}
				}

				developers {
					developer {
						id 'the_fireplace'
						name 'The_Fireplace'
						email 'the.f1repl4ce@gmail.com'
					}
				}
			}
		}
	}
}
